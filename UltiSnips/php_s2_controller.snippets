priority -50

snippet sfcontroller "Symfony2 / Controller / Controller class" b
<?php

namespace `!v substitute(substitute(substitute(expand("%:p"), '\v(.*\/\U+)((\/\w+)+)\/\w+.php$', '\2', ''), '\/', '\\', 'g'), '\\', '', '')`;

use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;

class `!p snip.rv = snip.basename or "ControllerClass"` extends Controller
{
    public function ${1:index}Action(${2:Request $request})
    {
        ${0}
        return \$this->render('${3:Bundle:Folder:file.html.twig}', array(${4}));
    }
}
endsnippet

snippet sfcontrollera "Symfony2 / Controller / Controller class (annotated)" b
<?php

namespace `!v substitute(substitute(substitute(expand("%:p"), '\v(.*\/\U+)((\/\w+)+)\/\w+.php$', '\2', ''), '\/', '\\', 'g'), '\\', '', '')`;

use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;

class `!p snip.rv = snip.basename or "ControllerClass"` extends Controller
{
    /**
     * @Route("${1:/}"${2:, name="${3}"})
     * @Template(${4})
     */
    public function ${5:index}Action(${6:Request $request})
    {
        ${0}
    }
}
endsnippet

snippet sfaction "Symfony2 / Controller / Action" b
public function ${1:index}Action(${2:Request $request})
{
    ${0}
    return \$this->render('${3:Bundle:Folder:file.html.twig}', array(${4}));
}
endsnippet

snippet sfactiona "Symfony2 / Controller / Action (annotated)" b
/**
 * @Route("${1:/}"${2:, name="${3}"})
 * @Template(${4})
 */
public function ${5:index}Action(${6:Request $request})
{
    ${0}
}
endsnippet

snippet sfrender "Symfony2 / Controller / Render"
return \$this->render('${1:Bundle:Folder:file.html.twig}', array(${2}));
);
endsnippet

snippet sfforward "Symfony2 / Controller / Forward"
\$this->forward(
    '${1:Bundle}:${2:Controller}:${3:action}',
    array(${4})
);
endsnippet

snippet sfredirect "Symfony2 / Controller / Redirect"
\$this->redirect(
    \$this->generateUrl(
        '${1:route}',
		array(${2})
	)${3:,
	code}
);
endsnippet
