priority -40

snippet sfform "Symfony2 / Form / Form Type" b
<?php

namespace `!v ultisnips_php#resolve_namespace()`;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

/**
 * Class: `!p snip.rv = snip.basename or "FormTypeClass"`
 *
 * @see http://symfony.com/doc/current/book/forms.html
 * @see AbstractType
 */
class `!p snip.rv = snip.basename or "FormTypeClass"` extends AbstractType
{
	/**
	 * {@inheritdoc}
	 */
	public function buildForm(FormBuilderInterface \$builder, array \$options)
	{
		\$builder
			->add(${0}
		;
	}

	/**
	 * {@inheritdoc}
	 */
	public function setDefaultOptions(OptionsResolverInterface \$resolver)
	{
		\$resolver->setDefaults(array(
			'data_class' => ${2:null},
		));
	}

	/**
	 * {@inheritdoc}
	 */
	public function getName()
	{
		return '${1:form_name}';
	}
}
endsnippet

snippet sfdatatransformer "Symfony2 / Form / Data Transformer" b
<?php

namespace `!v ultisnips_php#resolve_namespace()`;

use Symfony\Component\Form\DataTransformerInterface;
use Symfony\Component\Form\Exception\UnexpectedTypeException;
use Symfony\Component\Form\Exception\TransformationFailedException;

/**
 * Class: `!p snip.rv = snip.basename or "TransformerClass"`
 *
 * @see http://symfony.com/doc/current/cookbook/form/data_transformers.html
 * @see DataTransformerInterface
 */
class `!p snip.rv = snip.basename or "TransformerClass"` implements DataTransformerInterface
{
	/**
	 * {@inheritdoc}
	 */
	public function transform(\$value)
	{
		${0}
	}

	/**
	 * {@inheritdoc}
	 */
	public function reverseTransform(\$value)
	{

	}
}
endsnippet
